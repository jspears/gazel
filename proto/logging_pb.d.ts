// @generated by protoc-gen-es v2.9.0 with parameter "keep_empty_files=true,target=js+dts"
// @generated from file proto/logging.proto (package logger, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Any, Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file proto/logging.proto.
 */
export declare const file_proto_logging: GenFile;

/**
 * @generated from message logger.LogMessage
 */
export declare type LogMessage = Message<"logger.LogMessage"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: google.protobuf.Timestamp time = 2;
   */
  time?: Timestamp;

  /**
   * @generated from field: google.protobuf.Any details = 3;
   */
  details?: Any;

  /**
   * Log level for this message
   *
   * @generated from field: logger.LogLevel level = 4;
   */
  level: LogLevel;
};

/**
 * Describes the message logger.LogMessage.
 * Use `create(LogMessageSchema)` to create a new message.
 */
export declare const LogMessageSchema: GenMessage<LogMessage>;

/**
 * @generated from message logger.Empty
 */
export declare type Empty = Message<"logger.Empty"> & {
};

/**
 * Describes the message logger.Empty.
 * Use `create(EmptySchema)` to create a new message.
 */
export declare const EmptySchema: GenMessage<Empty>;

/**
 * Logging level enumeration
 *
 * @generated from enum logger.LogLevel
 */
export enum LogLevel {
  /**
   * Default unspecified level
   *
   * @generated from enum value: LOG_LEVEL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Trace level - most verbose, for detailed debugging
   *
   * @generated from enum value: LOG_LEVEL_TRACE = 1;
   */
  TRACE = 1,

  /**
   * Debug level - debugging information
   *
   * @generated from enum value: LOG_LEVEL_DEBUG = 2;
   */
  DEBUG = 2,

  /**
   * Info level - informational messages
   *
   * @generated from enum value: LOG_LEVEL_INFO = 3;
   */
  INFO = 3,

  /**
   * Warning level - warning messages
   *
   * @generated from enum value: LOG_LEVEL_WARN = 4;
   */
  WARN = 4,

  /**
   * Error level - error messages
   *
   * @generated from enum value: LOG_LEVEL_ERROR = 5;
   */
  ERROR = 5,

  /**
   * Fatal level - fatal errors that cause termination
   *
   * @generated from enum value: LOG_LEVEL_FATAL = 6;
   */
  FATAL = 6,
}

/**
 * Describes the enum logger.LogLevel.
 */
export declare const LogLevelSchema: GenEnum<LogLevel>;

/**
 * @generated from service logger.Logger
 */
export declare const Logger: GenService<{
  /**
   * @generated from rpc logger.Logger.SendLogMessage
   */
  sendLogMessage: {
    methodKind: "unary";
    input: typeof LogMessageSchema;
    output: typeof EmptySchema;
  },
}>;

