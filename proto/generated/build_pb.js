// Copyright 2014 The Bazel Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// This file contains the protocol buffer representation of a build
// file or 'blaze query --output=proto' call.

// @generated by protoc-gen-es v2.9.0 with parameter "import_extension=js"
// @generated from file build.proto (package blaze_query, syntax proto2)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_stardoc_output } from "./stardoc_output_pb.js";

/**
 * Describes the file build.proto.
 */
export const file_build = /*@__PURE__*/
  fileDesc("CgtidWlsZC5wcm90bxILYmxhemVfcXVlcnkiMgoHTGljZW5zZRIUCgxsaWNlbnNlX3R5cGUYASADKAkSEQoJZXhjZXB0aW9uGAIgAygJIi0KD1N0cmluZ0RpY3RFbnRyeRILCgNrZXkYASACKAkSDQoFdmFsdWUYAiACKAkiMQoTTGFiZWxEaWN0VW5hcnlFbnRyeRILCgNrZXkYASACKAkSDQoFdmFsdWUYAiACKAkiMAoSTGFiZWxMaXN0RGljdEVudHJ5EgsKA2tleRgBIAIoCRINCgV2YWx1ZRgCIAMoCSI3ChlMYWJlbEtleWVkU3RyaW5nRGljdEVudHJ5EgsKA2tleRgBIAIoCRINCgV2YWx1ZRgCIAIoCSIxChNTdHJpbmdMaXN0RGljdEVudHJ5EgsKA2tleRgBIAIoCRINCgV2YWx1ZRgCIAMoCSKCAgoMRmlsZXNldEVudHJ5Eg4KBnNvdXJjZRgBIAIoCRIdChVkZXN0aW5hdGlvbl9kaXJlY3RvcnkYAiACKAkSFQoNZmlsZXNfcHJlc2VudBgHIAEoCBIMCgRmaWxlGAMgAygJEg8KB2V4Y2x1ZGUYBCADKAkSSQoQc3ltbGlua19iZWhhdmlvchgFIAEoDjIpLmJsYXplX3F1ZXJ5LkZpbGVzZXRFbnRyeS5TeW1saW5rQmVoYXZpb3I6BENPUFkSFAoMc3RyaXBfcHJlZml4GAYgASgJIiwKD1N5bWxpbmtCZWhhdmlvchIICgRDT1BZEAESDwoLREVSRUZFUkVOQ0UQAiLEEQoJQXR0cmlidXRlEgwKBG5hbWUYASACKAkSHAoUZXhwbGljaXRseV9zcGVjaWZpZWQYDSABKAgSDQoFbm9kZXAYFCABKAgSGgoSc291cmNlX2FzcGVjdF9uYW1lGBcgASgJEjIKBHR5cGUYAiACKA4yJC5ibGF6ZV9xdWVyeS5BdHRyaWJ1dGUuRGlzY3JpbWluYXRvchIRCglpbnRfdmFsdWUYAyABKAUSFAoMc3RyaW5nX3ZhbHVlGAUgASgJEhUKDWJvb2xlYW5fdmFsdWUYDiABKAgSNwoOdHJpc3RhdGVfdmFsdWUYDyABKA4yHy5ibGF6ZV9xdWVyeS5BdHRyaWJ1dGUuVHJpc3RhdGUSGQoRc3RyaW5nX2xpc3RfdmFsdWUYBiADKAkSJQoHbGljZW5zZRgHIAEoCzIULmJsYXplX3F1ZXJ5LkxpY2Vuc2USNwoRc3RyaW5nX2RpY3RfdmFsdWUYCCADKAsyHC5ibGF6ZV9xdWVyeS5TdHJpbmdEaWN0RW50cnkSNQoSZmlsZXNldF9saXN0X3ZhbHVlGAkgAygLMhkuYmxhemVfcXVlcnkuRmlsZXNldEVudHJ5Ej4KFWxhYmVsX2xpc3RfZGljdF92YWx1ZRgKIAMoCzIfLmJsYXplX3F1ZXJ5LkxhYmVsTGlzdERpY3RFbnRyeRJAChZzdHJpbmdfbGlzdF9kaWN0X3ZhbHVlGAsgAygLMiAuYmxhemVfcXVlcnkuU3RyaW5nTGlzdERpY3RFbnRyeRIWCg5pbnRfbGlzdF92YWx1ZRgRIAMoBRJAChZsYWJlbF9kaWN0X3VuYXJ5X3ZhbHVlGBMgAygLMiAuYmxhemVfcXVlcnkuTGFiZWxEaWN0VW5hcnlFbnRyeRJNCh1sYWJlbF9rZXllZF9zdHJpbmdfZGljdF92YWx1ZRgWIAMoCzImLmJsYXplX3F1ZXJ5LkxhYmVsS2V5ZWRTdHJpbmdEaWN0RW50cnkSOgoNc2VsZWN0b3JfbGlzdBgVIAEoCzIjLmJsYXplX3F1ZXJ5LkF0dHJpYnV0ZS5TZWxlY3Rvckxpc3QSKgoiREVQUkVDQVRFRF9zdHJpbmdfZGljdF91bmFyeV92YWx1ZRgSIAMoDBrABQoNU2VsZWN0b3JFbnRyeRINCgVsYWJlbBgBIAEoCRIYChBpc19kZWZhdWx0X3ZhbHVlGBAgASgIEhEKCWludF92YWx1ZRgCIAEoBRIUCgxzdHJpbmdfdmFsdWUYAyABKAkSFQoNYm9vbGVhbl92YWx1ZRgEIAEoCBI3Cg50cmlzdGF0ZV92YWx1ZRgFIAEoDjIfLmJsYXplX3F1ZXJ5LkF0dHJpYnV0ZS5UcmlzdGF0ZRIZChFzdHJpbmdfbGlzdF92YWx1ZRgGIAMoCRIlCgdsaWNlbnNlGAcgASgLMhQuYmxhemVfcXVlcnkuTGljZW5zZRI3ChFzdHJpbmdfZGljdF92YWx1ZRgIIAMoCzIcLmJsYXplX3F1ZXJ5LlN0cmluZ0RpY3RFbnRyeRI1ChJmaWxlc2V0X2xpc3RfdmFsdWUYCSADKAsyGS5ibGF6ZV9xdWVyeS5GaWxlc2V0RW50cnkSPgoVbGFiZWxfbGlzdF9kaWN0X3ZhbHVlGAogAygLMh8uYmxhemVfcXVlcnkuTGFiZWxMaXN0RGljdEVudHJ5EkAKFnN0cmluZ19saXN0X2RpY3RfdmFsdWUYCyADKAsyIC5ibGF6ZV9xdWVyeS5TdHJpbmdMaXN0RGljdEVudHJ5EhYKDmludF9saXN0X3ZhbHVlGA0gAygFEkAKFmxhYmVsX2RpY3RfdW5hcnlfdmFsdWUYDyADKAsyIC5ibGF6ZV9xdWVyeS5MYWJlbERpY3RVbmFyeUVudHJ5Ek0KHWxhYmVsX2tleWVkX3N0cmluZ19kaWN0X3ZhbHVlGBEgAygLMiYuYmxhemVfcXVlcnkuTGFiZWxLZXllZFN0cmluZ0RpY3RFbnRyeRIqCiJERVBSRUNBVEVEX3N0cmluZ19kaWN0X3VuYXJ5X3ZhbHVlGA4gAygMSgQIDBANGnQKCFNlbGVjdG9yEjUKB2VudHJpZXMYASADKAsyJC5ibGF6ZV9xdWVyeS5BdHRyaWJ1dGUuU2VsZWN0b3JFbnRyeRIZChFoYXNfZGVmYXVsdF92YWx1ZRgCIAEoCBIWCg5ub19tYXRjaF9lcnJvchgDIAEoCRp1CgxTZWxlY3Rvckxpc3QSMgoEdHlwZRgBIAEoDjIkLmJsYXplX3F1ZXJ5LkF0dHJpYnV0ZS5EaXNjcmltaW5hdG9yEjEKCGVsZW1lbnRzGAIgAygLMh8uYmxhemVfcXVlcnkuQXR0cmlidXRlLlNlbGVjdG9yIooDCg1EaXNjcmltaW5hdG9yEgsKB0lOVEVHRVIQARIKCgZTVFJJTkcQAhIJCgVMQUJFTBADEgoKBk9VVFBVVBAEEg8KC1NUUklOR19MSVNUEAUSDgoKTEFCRUxfTElTVBAGEg8KC09VVFBVVF9MSVNUEAcSFAoQRElTVFJJQlVUSU9OX1NFVBAIEgsKB0xJQ0VOU0UQCRIPCgtTVFJJTkdfRElDVBAKEhYKEkZJTEVTRVRfRU5UUllfTElTVBALEhMKD0xBQkVMX0xJU1RfRElDVBAMEhQKEFNUUklOR19MSVNUX0RJQ1QQDRILCgdCT09MRUFOEA4SDAoIVFJJU1RBVEUQDxIQCgxJTlRFR0VSX0xJU1QQEBILCgdVTktOT1dOEBISFAoQTEFCRUxfRElDVF9VTkFSWRATEhEKDVNFTEVDVE9SX0xJU1QQFBIbChdMQUJFTF9LRVlFRF9TVFJJTkdfRElDVBAVEiAKHERFUFJFQ0FURURfU1RSSU5HX0RJQ1RfVU5BUlkQESIlCghUcmlzdGF0ZRIGCgJOTxAAEgcKA1lFUxABEggKBEFVVE8QAkoECAwQDUoECBAQESLiAwoEUnVsZRIMCgRuYW1lGAEgAigJEhIKCnJ1bGVfY2xhc3MYAiACKAkSEAoIbG9jYXRpb24YAyABKAkSKQoJYXR0cmlidXRlGAQgAygLMhYuYmxhemVfcXVlcnkuQXR0cmlidXRlEhIKCnJ1bGVfaW5wdXQYBSADKAkSPwoVY29uZmlndXJlZF9ydWxlX2lucHV0GA8gAygLMiAuYmxhemVfcXVlcnkuQ29uZmlndXJlZFJ1bGVJbnB1dBITCgtydWxlX291dHB1dBgGIAMoCRIXCg9kZWZhdWx0X3NldHRpbmcYByADKAkSJAocREVQUkVDQVRFRF9wdWJsaWNfYnlfZGVmYXVsdBgJIAEoCBIdChVERVBSRUNBVEVEX2lzX3NreWxhcmsYCiABKAgSJQodc2t5bGFya19lbnZpcm9ubWVudF9oYXNoX2NvZGUYDCABKAkSGwoTaW5zdGFudGlhdGlvbl9zdGFjaxgNIAMoCRIYChBkZWZpbml0aW9uX3N0YWNrGA4gAygJEhYKDnJ1bGVfY2xhc3Nfa2V5GBAgASgJEjEKD3J1bGVfY2xhc3NfaW5mbxgRIAEoCzIYLnN0YXJkb2Nfb3V0cHV0LlJ1bGVJbmZvSgQICBAJSgQICxAMIl4KE0NvbmZpZ3VyZWRSdWxlSW5wdXQSDQoFbGFiZWwYASABKAkSHgoWY29uZmlndXJhdGlvbl9jaGVja3N1bRgCIAEoCRIYChBjb25maWd1cmF0aW9uX2lkGAMgASgNImcKC1J1bGVTdW1tYXJ5Eh8KBHJ1bGUYASACKAsyES5ibGF6ZV9xdWVyeS5SdWxlEiUKCmRlcGVuZGVuY3kYAiADKAsyES5ibGF6ZV9xdWVyeS5SdWxlEhAKCGxvY2F0aW9uGAMgASgJIl0KDFBhY2thZ2VHcm91cBIMCgRuYW1lGAEgAigJEhkKEWNvbnRhaW5lZF9wYWNrYWdlGAIgAygJEh4KFmluY2x1ZGVkX3BhY2thZ2VfZ3JvdXAYAyADKAlKBAgEEAUiRgoQRW52aXJvbm1lbnRHcm91cBIMCgRuYW1lGAEgAigJEhMKC2Vudmlyb25tZW50GAIgAygJEg8KB2RlZmF1bHQYAyADKAki0AEKClNvdXJjZUZpbGUSDAoEbmFtZRgBIAIoCRIQCghsb2NhdGlvbhgCIAEoCRISCgpzdWJpbmNsdWRlGAMgAygJEhUKDXBhY2thZ2VfZ3JvdXAYBCADKAkSGAoQdmlzaWJpbGl0eV9sYWJlbBgFIAMoCRIPCgdmZWF0dXJlGAYgAygJEiUKB2xpY2Vuc2UYCCABKAsyFC5ibGF6ZV9xdWVyeS5MaWNlbnNlEh8KF3BhY2thZ2VfY29udGFpbnNfZXJyb3JzGAkgASgISgQIBxAIIkgKDUdlbmVyYXRlZEZpbGUSDAoEbmFtZRgBIAIoCRIXCg9nZW5lcmF0aW5nX3J1bGUYAiACKAkSEAoIbG9jYXRpb24YAyABKAkikgMKBlRhcmdldBIvCgR0eXBlGAEgAigOMiEuYmxhemVfcXVlcnkuVGFyZ2V0LkRpc2NyaW1pbmF0b3ISHwoEcnVsZRgCIAEoCzIRLmJsYXplX3F1ZXJ5LlJ1bGUSLAoLc291cmNlX2ZpbGUYAyABKAsyFy5ibGF6ZV9xdWVyeS5Tb3VyY2VGaWxlEjIKDmdlbmVyYXRlZF9maWxlGAQgASgLMhouYmxhemVfcXVlcnkuR2VuZXJhdGVkRmlsZRIwCg1wYWNrYWdlX2dyb3VwGAUgASgLMhkuYmxhemVfcXVlcnkuUGFja2FnZUdyb3VwEjgKEWVudmlyb25tZW50X2dyb3VwGAYgASgLMh0uYmxhemVfcXVlcnkuRW52aXJvbm1lbnRHcm91cCJoCg1EaXNjcmltaW5hdG9yEggKBFJVTEUQARIPCgtTT1VSQ0VfRklMRRACEhIKDkdFTkVSQVRFRF9GSUxFEAMSEQoNUEFDS0FHRV9HUk9VUBAEEhUKEUVOVklST05NRU5UX0dST1VQEAUiMgoLUXVlcnlSZXN1bHQSIwoGdGFyZ2V0GAEgAygLMhMuYmxhemVfcXVlcnkuVGFyZ2V0IqYBChRBbGxvd2VkUnVsZUNsYXNzSW5mbxJECgZwb2xpY3kYASACKA4yNC5ibGF6ZV9xdWVyeS5BbGxvd2VkUnVsZUNsYXNzSW5mby5BbGxvd2VkUnVsZUNsYXNzZXMSGgoSYWxsb3dlZF9ydWxlX2NsYXNzGAIgAygJIiwKEkFsbG93ZWRSdWxlQ2xhc3NlcxIHCgNBTlkQARINCglTUEVDSUZJRUQQAiLuAgoTQXR0cmlidXRlRGVmaW5pdGlvbhIMCgRuYW1lGAEgAigJEjIKBHR5cGUYAiACKA4yJC5ibGF6ZV9xdWVyeS5BdHRyaWJ1dGUuRGlzY3JpbWluYXRvchIRCgltYW5kYXRvcnkYAyABKAgSPwoUYWxsb3dlZF9ydWxlX2NsYXNzZXMYBCABKAsyIS5ibGF6ZV9xdWVyeS5BbGxvd2VkUnVsZUNsYXNzSW5mbxIVCg1kb2N1bWVudGF0aW9uGAUgASgJEhMKC2FsbG93X2VtcHR5GAYgASgIEhkKEWFsbG93X3NpbmdsZV9maWxlGAcgASgIEiwKB2RlZmF1bHQYCSABKAsyGy5ibGF6ZV9xdWVyeS5BdHRyaWJ1dGVWYWx1ZRISCgpleGVjdXRhYmxlGAogASgIEhQKDGNvbmZpZ3VyYWJsZRgLIAEoCBINCgVub2RlcBgMIAEoCBITCgtjZmdfaXNfaG9zdBgNIAEoCCLhAQoOQXR0cmlidXRlVmFsdWUSCwoDaW50GAEgASgFEg4KBnN0cmluZxgCIAEoCRIMCgRib29sGAMgASgIEikKBGxpc3QYBCADKAsyGy5ibGF6ZV9xdWVyeS5BdHRyaWJ1dGVWYWx1ZRIzCgRkaWN0GAUgAygLMiUuYmxhemVfcXVlcnkuQXR0cmlidXRlVmFsdWUuRGljdEVudHJ5GkQKCURpY3RFbnRyeRILCgNrZXkYASACKAkSKgoFdmFsdWUYAiACKAsyGy5ibGF6ZV9xdWVyeS5BdHRyaWJ1dGVWYWx1ZSJ5Cg5SdWxlRGVmaW5pdGlvbhIMCgRuYW1lGAEgAigJEjMKCWF0dHJpYnV0ZRgCIAMoCzIgLmJsYXplX3F1ZXJ5LkF0dHJpYnV0ZURlZmluaXRpb24SFQoNZG9jdW1lbnRhdGlvbhgDIAEoCRINCgVsYWJlbBgEIAEoCSI6Cg1CdWlsZExhbmd1YWdlEikKBHJ1bGUYASADKAsyGy5ibGF6ZV9xdWVyeS5SdWxlRGVmaW5pdGlvbkI2CjRjb20uZ29vZ2xlLmRldnRvb2xzLmJ1aWxkLmxpYi5xdWVyeTIucHJvdG8ucHJvdG8yYXBp", [file_stardoc_output]);

/**
 * Describes the message blaze_query.License.
 * Use `create(LicenseSchema)` to create a new message.
 */
export const LicenseSchema = /*@__PURE__*/
  messageDesc(file_build, 0);

/**
 * Describes the message blaze_query.StringDictEntry.
 * Use `create(StringDictEntrySchema)` to create a new message.
 */
export const StringDictEntrySchema = /*@__PURE__*/
  messageDesc(file_build, 1);

/**
 * Describes the message blaze_query.LabelDictUnaryEntry.
 * Use `create(LabelDictUnaryEntrySchema)` to create a new message.
 */
export const LabelDictUnaryEntrySchema = /*@__PURE__*/
  messageDesc(file_build, 2);

/**
 * Describes the message blaze_query.LabelListDictEntry.
 * Use `create(LabelListDictEntrySchema)` to create a new message.
 */
export const LabelListDictEntrySchema = /*@__PURE__*/
  messageDesc(file_build, 3);

/**
 * Describes the message blaze_query.LabelKeyedStringDictEntry.
 * Use `create(LabelKeyedStringDictEntrySchema)` to create a new message.
 */
export const LabelKeyedStringDictEntrySchema = /*@__PURE__*/
  messageDesc(file_build, 4);

/**
 * Describes the message blaze_query.StringListDictEntry.
 * Use `create(StringListDictEntrySchema)` to create a new message.
 */
export const StringListDictEntrySchema = /*@__PURE__*/
  messageDesc(file_build, 5);

/**
 * Describes the message blaze_query.FilesetEntry.
 * Use `create(FilesetEntrySchema)` to create a new message.
 */
export const FilesetEntrySchema = /*@__PURE__*/
  messageDesc(file_build, 6);

/**
 * Describes the enum blaze_query.FilesetEntry.SymlinkBehavior.
 */
export const FilesetEntry_SymlinkBehaviorSchema = /*@__PURE__*/
  enumDesc(file_build, 6, 0);

/**
 * Indicates what to do when a source file is actually a symlink.
 *
 * @generated from enum blaze_query.FilesetEntry.SymlinkBehavior
 */
export const FilesetEntry_SymlinkBehavior = /*@__PURE__*/
  tsEnum(FilesetEntry_SymlinkBehaviorSchema);

/**
 * Describes the message blaze_query.Attribute.
 * Use `create(AttributeSchema)` to create a new message.
 */
export const AttributeSchema = /*@__PURE__*/
  messageDesc(file_build, 7);

/**
 * Describes the message blaze_query.Attribute.SelectorEntry.
 * Use `create(Attribute_SelectorEntrySchema)` to create a new message.
 */
export const Attribute_SelectorEntrySchema = /*@__PURE__*/
  messageDesc(file_build, 7, 0);

/**
 * Describes the message blaze_query.Attribute.Selector.
 * Use `create(Attribute_SelectorSchema)` to create a new message.
 */
export const Attribute_SelectorSchema = /*@__PURE__*/
  messageDesc(file_build, 7, 1);

/**
 * Describes the message blaze_query.Attribute.SelectorList.
 * Use `create(Attribute_SelectorListSchema)` to create a new message.
 */
export const Attribute_SelectorListSchema = /*@__PURE__*/
  messageDesc(file_build, 7, 2);

/**
 * Describes the enum blaze_query.Attribute.Discriminator.
 */
export const Attribute_DiscriminatorSchema = /*@__PURE__*/
  enumDesc(file_build, 7, 0);

/**
 * Indicates the type of attribute.
 *
 * @generated from enum blaze_query.Attribute.Discriminator
 */
export const Attribute_Discriminator = /*@__PURE__*/
  tsEnum(Attribute_DiscriminatorSchema);

/**
 * Describes the enum blaze_query.Attribute.Tristate.
 */
export const Attribute_TristateSchema = /*@__PURE__*/
  enumDesc(file_build, 7, 1);

/**
 * Values for the TriState field type.
 *
 * @generated from enum blaze_query.Attribute.Tristate
 */
export const Attribute_Tristate = /*@__PURE__*/
  tsEnum(Attribute_TristateSchema);

/**
 * Describes the message blaze_query.Rule.
 * Use `create(RuleSchema)` to create a new message.
 */
export const RuleSchema = /*@__PURE__*/
  messageDesc(file_build, 8);

/**
 * Describes the message blaze_query.ConfiguredRuleInput.
 * Use `create(ConfiguredRuleInputSchema)` to create a new message.
 */
export const ConfiguredRuleInputSchema = /*@__PURE__*/
  messageDesc(file_build, 9);

/**
 * Describes the message blaze_query.RuleSummary.
 * Use `create(RuleSummarySchema)` to create a new message.
 */
export const RuleSummarySchema = /*@__PURE__*/
  messageDesc(file_build, 10);

/**
 * Describes the message blaze_query.PackageGroup.
 * Use `create(PackageGroupSchema)` to create a new message.
 */
export const PackageGroupSchema = /*@__PURE__*/
  messageDesc(file_build, 11);

/**
 * Describes the message blaze_query.EnvironmentGroup.
 * Use `create(EnvironmentGroupSchema)` to create a new message.
 */
export const EnvironmentGroupSchema = /*@__PURE__*/
  messageDesc(file_build, 12);

/**
 * Describes the message blaze_query.SourceFile.
 * Use `create(SourceFileSchema)` to create a new message.
 */
export const SourceFileSchema = /*@__PURE__*/
  messageDesc(file_build, 13);

/**
 * Describes the message blaze_query.GeneratedFile.
 * Use `create(GeneratedFileSchema)` to create a new message.
 */
export const GeneratedFileSchema = /*@__PURE__*/
  messageDesc(file_build, 14);

/**
 * Describes the message blaze_query.Target.
 * Use `create(TargetSchema)` to create a new message.
 */
export const TargetSchema = /*@__PURE__*/
  messageDesc(file_build, 15);

/**
 * Describes the enum blaze_query.Target.Discriminator.
 */
export const Target_DiscriminatorSchema = /*@__PURE__*/
  enumDesc(file_build, 15, 0);

/**
 * @generated from enum blaze_query.Target.Discriminator
 */
export const Target_Discriminator = /*@__PURE__*/
  tsEnum(Target_DiscriminatorSchema);

/**
 * Describes the message blaze_query.QueryResult.
 * Use `create(QueryResultSchema)` to create a new message.
 */
export const QueryResultSchema = /*@__PURE__*/
  messageDesc(file_build, 16);

/**
 * Describes the message blaze_query.AllowedRuleClassInfo.
 * Use `create(AllowedRuleClassInfoSchema)` to create a new message.
 */
export const AllowedRuleClassInfoSchema = /*@__PURE__*/
  messageDesc(file_build, 17);

/**
 * Describes the enum blaze_query.AllowedRuleClassInfo.AllowedRuleClasses.
 */
export const AllowedRuleClassInfo_AllowedRuleClassesSchema = /*@__PURE__*/
  enumDesc(file_build, 17, 0);

/**
 * @generated from enum blaze_query.AllowedRuleClassInfo.AllowedRuleClasses
 */
export const AllowedRuleClassInfo_AllowedRuleClasses = /*@__PURE__*/
  tsEnum(AllowedRuleClassInfo_AllowedRuleClassesSchema);

/**
 * Describes the message blaze_query.AttributeDefinition.
 * Use `create(AttributeDefinitionSchema)` to create a new message.
 */
export const AttributeDefinitionSchema = /*@__PURE__*/
  messageDesc(file_build, 18);

/**
 * Describes the message blaze_query.AttributeValue.
 * Use `create(AttributeValueSchema)` to create a new message.
 */
export const AttributeValueSchema = /*@__PURE__*/
  messageDesc(file_build, 19);

/**
 * Describes the message blaze_query.AttributeValue.DictEntry.
 * Use `create(AttributeValue_DictEntrySchema)` to create a new message.
 */
export const AttributeValue_DictEntrySchema = /*@__PURE__*/
  messageDesc(file_build, 19, 0);

/**
 * Describes the message blaze_query.RuleDefinition.
 * Use `create(RuleDefinitionSchema)` to create a new message.
 */
export const RuleDefinitionSchema = /*@__PURE__*/
  messageDesc(file_build, 20);

/**
 * Describes the message blaze_query.BuildLanguage.
 * Use `create(BuildLanguageSchema)` to create a new message.
 */
export const BuildLanguageSchema = /*@__PURE__*/
  messageDesc(file_build, 21);

