// @generated by protoc-gen-es v2.9.0 with parameter "import_extension=js"
// @generated from file gazel.proto (package gazel.api.v1, syntax proto3)
/* eslint-disable */

import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_build } from "./build_pb.js";

/**
 * Describes the file gazel.proto.
 */
export const file_gazel = /*@__PURE__*/
  fileDesc("CgtnYXplbC5wcm90bxIMZ2F6ZWwuYXBpLnYxIqABCg1Xb3Jrc3BhY2VJbmZvEgwKBHBhdGgYASABKAkSDAoEbmFtZRgCIAEoCRINCgV2YWxpZBgDIAEoCBINCgVlcnJvchgEIAEoCRIQCghwYWNrYWdlcxgFIAMoCRIUCgx0YXJnZXRfY291bnQYBiABKAUSEgoKZmlsZV9jb3VudBgHIAEoBRIZChF3b3Jrc3BhY2VfdmVyc2lvbhgIIAEoCSKUAgoJQmF6ZWxJbmZvEg8KB3ZlcnNpb24YASABKAkSDwoHcmVsZWFzZRgCIAEoCRIRCgl3b3Jrc3BhY2UYAyABKAkSFgoOZXhlY3V0aW9uX3Jvb3QYBCABKAkSEwoLb3V0cHV0X2Jhc2UYBSABKAkSEwoLb3V0cHV0X3BhdGgYBiABKAkSEgoKc2VydmVyX3BpZBgHIAEoCRISCgpzZXJ2ZXJfbG9nGAggASgJEhMKC2NvbW1hbmRfbG9nGAkgASgJEh8KF3VzZWRfaGVhcF9zaXplX2FmdGVyX2djGAogASgIEhUKDW1heF9oZWFwX3NpemUYCyABKAkSGwoTY29tbWl0dGVkX2hlYXBfc2l6ZRgMIAEoCSKuAgoOQmF6ZWxBdHRyaWJ1dGUSDAoEbmFtZRgBIAEoCRIMCgR0eXBlGAIgASgJEhkKDHN0cmluZ192YWx1ZRgDIAEoCUgAiAEBEhkKEXN0cmluZ19saXN0X3ZhbHVlGAQgAygJEhYKCWludF92YWx1ZRgFIAEoA0gBiAEBEhoKDWJvb2xlYW5fdmFsdWUYBiABKAhIAogBARI4ChFzdHJpbmdfZGljdF92YWx1ZRgHIAMoCzIdLmdhemVsLmFwaS52MS5TdHJpbmdEaWN0RW50cnkSHAoUZXhwbGljaXRseV9zcGVjaWZpZWQYCCABKAgSDQoFbm9kZXAYCSABKAhCDwoNX3N0cmluZ192YWx1ZUIMCgpfaW50X3ZhbHVlQhAKDl9ib29sZWFuX3ZhbHVlIi0KD1N0cmluZ0RpY3RFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAki3QEKC0JhemVsVGFyZ2V0Eg0KBWxhYmVsGAEgASgJEgwKBGtpbmQYAiABKAkSDwoHcGFja2FnZRgDIAEoCRIMCgRuYW1lGAQgASgJEgwKBHRhZ3MYBSADKAkSDAoEZGVwcxgGIAMoCRIMCgRzcmNzGAcgAygJEjAKCmF0dHJpYnV0ZXMYCCADKAsyHC5nYXplbC5hcGkudjEuQmF6ZWxBdHRyaWJ1dGUSEgoKdmlzaWJpbGl0eRgJIAEoCRIQCgh0ZXN0b25seRgKIAEoCBIQCghsb2NhdGlvbhgLIAEoCSKxAQoJQnVpbGRGaWxlEgwKBHBhdGgYASABKAkSDwoHcGFja2FnZRgCIAEoCRIqCgd0YXJnZXRzGAMgAygLMhkuZ2F6ZWwuYXBpLnYxLkJhemVsVGFyZ2V0EhIKCmxpbmVfY291bnQYBCABKAUSEgoKc2l6ZV9ieXRlcxgFIAEoAxIxCg1tb2RpZmllZF90aW1lGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCKhAQoNUXVlcnlUZW1wbGF0ZRIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEhAKCHRlbXBsYXRlGAQgASgJEhIKCnBhcmFtZXRlcnMYBSADKAkSEAoIY2F0ZWdvcnkYBiABKAkSEgoKcXVlcnlfdHlwZRgHIAEoCRIVCg1vdXRwdXRfZm9ybWF0GAggASgJIqoBCgpTYXZlZFF1ZXJ5EgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSDQoFcXVlcnkYAyABKAkSEwoLZGVzY3JpcHRpb24YBCABKAkSLgoKY3JlYXRlZF9hdBgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAisQEKDkNvbW1hbmRIaXN0b3J5EgoKAmlkGAEgASgJEg8KB2NvbW1hbmQYAiABKAkSDAoEYXJncxgDIAMoCRIPCgdzdWNjZXNzGAQgASgIEg4KBm91dHB1dBgFIAEoCRINCgVlcnJvchgGIAEoCRIvCgtleGVjdXRlZF9hdBgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEwoLZHVyYXRpb25fbXMYCCABKAMitAMKBk1vZHVsZRILCgNrZXkYASABKAkSDAoEbmFtZRgCIAEoCRIPCgd2ZXJzaW9uGAMgASgJEigKCGxvY2F0aW9uGAQgASgLMhYuZ2F6ZWwuYXBpLnYxLkxvY2F0aW9uEhsKE2NvbXBhdGliaWxpdHlfbGV2ZWwYBSABKAUSEQoJcmVwb19uYW1lGAYgASgJEhsKE2JhemVsX2NvbXBhdGliaWxpdHkYByADKAkSJQodbW9kdWxlX3J1bGVfZXhwb3J0c19hbGxfcnVsZXMYCCABKAgSDAoEdGFncxgJIAMoCRIuCgxkZXBlbmRlbmNpZXMYCiADKAsyGC5nYXplbC5hcGkudjEuRGVwZW5kZW5jeRI3ChVyZXNvbHZlZF9kZXBlbmRlbmNpZXMYCyADKAsyGC5nYXplbC5hcGkudjEuRGVwZW5kZW5jeRI2ChBleHRlbnNpb25fdXNhZ2VzGAwgAygLMhwuZ2F6ZWwuYXBpLnYxLkV4dGVuc2lvblVzYWdlEhgKEGRlcGVuZGVuY3lfY291bnQYDSABKAUSFwoPZXh0ZW5zaW9uX2NvdW50GA4gASgFIjYKCExvY2F0aW9uEgwKBGZpbGUYASABKAkSDAoEbGluZRgCIAEoBRIOCgZjb2x1bW4YAyABKAUiYgoKRGVwZW5kZW5jeRILCgNrZXkYASABKAkSDAoEbmFtZRgCIAEoCRIPCgd2ZXJzaW9uGAMgASgJEhYKDmRldl9kZXBlbmRlbmN5GAQgASgIEhAKCHJlZ2lzdHJ5GAUgASgJIoMCCg5FeHRlbnNpb25Vc2FnZRIaChJleHRlbnNpb25fYnpsX2ZpbGUYASABKAkSFgoOZXh0ZW5zaW9uX25hbWUYAiABKAkSKAoIbG9jYXRpb24YAyABKAsyFi5nYXplbC5hcGkudjEuTG9jYXRpb24SOgoHaW1wb3J0cxgEIAMoCzIpLmdhemVsLmFwaS52MS5FeHRlbnNpb25Vc2FnZS5JbXBvcnRzRW50cnkSFgoOZGV2X2RlcGVuZGVuY3kYBSABKAgSDwoHaXNvbGF0ZRgGIAEoCBouCgxJbXBvcnRzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJLChBNb2R1bGVEZXBlbmRlbmN5EgwKBGZyb20YASABKAkSCgoCdG8YAiABKAkSDAoEdHlwZRgDIAEoCRIPCgd2ZXJzaW9uGAQgASgJIhkKF0dldFdvcmtzcGFjZUluZm9SZXF1ZXN0IkUKGEdldFdvcmtzcGFjZUluZm9SZXNwb25zZRIpCgRpbmZvGAEgASgLMhsuZ2F6ZWwuYXBpLnYxLldvcmtzcGFjZUluZm8iHAoaR2V0Q3VycmVudFdvcmtzcGFjZVJlcXVlc3QiYgobR2V0Q3VycmVudFdvcmtzcGFjZVJlc3BvbnNlEhIKCmNvbmZpZ3VyZWQYASABKAgSEQoJd29ya3NwYWNlGAIgASgJEg0KBXZhbGlkGAMgASgIEg0KBWVycm9yGAQgASgJIhcKFVNjYW5Xb3Jrc3BhY2VzUmVxdWVzdCKTAQoWU2NhbldvcmtzcGFjZXNSZXNwb25zZRJCCgp3b3Jrc3BhY2VzGAEgAygLMi4uZ2F6ZWwuYXBpLnYxLlNjYW5Xb3Jrc3BhY2VzUmVzcG9uc2UuV29ya3NwYWNlGjUKCVdvcmtzcGFjZRIMCgRwYXRoGAEgASgJEgwKBG5hbWUYAiABKAkSDAoEdHlwZRgDIAEoCSIrChZTd2l0Y2hXb3Jrc3BhY2VSZXF1ZXN0EhEKCXdvcmtzcGFjZRgBIAEoCSJOChdTd2l0Y2hXb3Jrc3BhY2VSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEhEKCXdvcmtzcGFjZRgCIAEoCRIPCgdtZXNzYWdlGAMgASgJIhoKGEdldFdvcmtzcGFjZUZpbGVzUmVxdWVzdCLEAQoZR2V0V29ya3NwYWNlRmlsZXNSZXNwb25zZRJECgVmaWxlcxgBIAMoCzI1LmdhemVsLmFwaS52MS5HZXRXb3Jrc3BhY2VGaWxlc1Jlc3BvbnNlLldvcmtzcGFjZUZpbGUaYQoNV29ya3NwYWNlRmlsZRIMCgRwYXRoGAEgASgJEgwKBG5hbWUYAiABKAkSDAoEdHlwZRgDIAEoCRIPCgd0YXJnZXRzGAQgASgFEhUKDWxhc3RfbW9kaWZpZWQYBSABKAMiFQoTR2V0QmF6ZWxJbmZvUmVxdWVzdCI9ChRHZXRCYXplbEluZm9SZXNwb25zZRIlCgRpbmZvGAEgASgLMhcuZ2F6ZWwuYXBpLnYxLkJhemVsSW5mbyI1ChJMaXN0VGFyZ2V0c1JlcXVlc3QSDwoHcGF0dGVybhgBIAEoCRIOCgZmb3JtYXQYAiABKAkikgEKE0xpc3RUYXJnZXRzUmVzcG9uc2USKwoGdGFyZ2V0GAEgASgLMhkuZ2F6ZWwuYXBpLnYxLkJhemVsVGFyZ2V0SAASNQoIY29tcGxldGUYAiABKAsyIS5nYXplbC5hcGkudjEuTGlzdFRhcmdldHNDb21wbGV0ZUgAEg8KBWVycm9yGAMgASgJSABCBgoEZGF0YSIkChNMaXN0VGFyZ2V0c0NvbXBsZXRlEg0KBXRvdGFsGAEgASgFIjgKClRhcmdldExpc3QSKgoHdGFyZ2V0cxgBIAMoCzIZLmdhemVsLmFwaS52MS5CYXplbFRhcmdldCIiChBHZXRUYXJnZXRSZXF1ZXN0Eg4KBnRhcmdldBgBIAEoCSI+ChFHZXRUYXJnZXRSZXNwb25zZRIpCgZ0YXJnZXQYASABKAsyGS5nYXplbC5hcGkudjEuQmF6ZWxUYXJnZXQiPQocR2V0VGFyZ2V0RGVwZW5kZW5jaWVzUmVxdWVzdBIOCgZ0YXJnZXQYASABKAkSDQoFZGVwdGgYAiABKAUifgodR2V0VGFyZ2V0RGVwZW5kZW5jaWVzUmVzcG9uc2USDgoGdGFyZ2V0GAEgASgJEg0KBWRlcHRoGAIgASgFEg0KBXRvdGFsGAMgASgFEi8KDGRlcGVuZGVuY2llcxgEIAMoCzIZLmdhemVsLmFwaS52MS5CYXplbFRhcmdldCIpChdHZXRUYXJnZXRPdXRwdXRzUmVxdWVzdBIOCgZ0YXJnZXQYASABKAkiSgoYR2V0VGFyZ2V0T3V0cHV0c1Jlc3BvbnNlEg4KBnRhcmdldBgBIAEoCRIPCgdvdXRwdXRzGAIgAygJEg0KBWNvdW50GAMgASgFIi8KHUdldFJldmVyc2VEZXBlbmRlbmNpZXNSZXF1ZXN0Eg4KBnRhcmdldBgBIAEoCSJwCh5HZXRSZXZlcnNlRGVwZW5kZW5jaWVzUmVzcG9uc2USDgoGdGFyZ2V0GAEgASgJEg0KBXRvdGFsGAIgASgFEi8KDGRlcGVuZGVuY2llcxgDIAMoCzIZLmdhemVsLmFwaS52MS5CYXplbFRhcmdldCJFChlHZXRPdXRwdXRDb25zdW1lcnNSZXF1ZXN0Eg4KBm91dHB1dBgBIAEoCRIYChBwcm9kdWNpbmdfdGFyZ2V0GAIgASgJImkKGkdldE91dHB1dENvbnN1bWVyc1Jlc3BvbnNlEg4KBm91dHB1dBgBIAEoCRINCgV0b3RhbBgCIAEoBRIsCgljb25zdW1lcnMYAyADKAsyGS5nYXplbC5hcGkudjEuQmF6ZWxUYXJnZXQiRAoUU2VhcmNoVGFyZ2V0c1JlcXVlc3QSDQoFcXVlcnkYASABKAkSDAoEdHlwZRgCIAEoCRIPCgdwYWNrYWdlGAMgASgJIpYBChVTZWFyY2hUYXJnZXRzUmVzcG9uc2USKwoGdGFyZ2V0GAEgASgLMhkuZ2F6ZWwuYXBpLnYxLkJhemVsVGFyZ2V0SAASNwoIY29tcGxldGUYAiABKAsyIy5nYXplbC5hcGkudjEuU2VhcmNoVGFyZ2V0c0NvbXBsZXRlSAASDwoFZXJyb3IYAyABKAlIAEIGCgRkYXRhIjUKFVNlYXJjaFRhcmdldHNDb21wbGV0ZRINCgVxdWVyeRgBIAEoCRINCgV0b3RhbBgCIAEoBSJPChNFeGVjdXRlUXVlcnlSZXF1ZXN0Eg0KBXF1ZXJ5GAEgASgJEhUKDW91dHB1dF9mb3JtYXQYAiABKAkSEgoKcXVlcnlfdHlwZRgDIAEoCSJ0ChRFeGVjdXRlUXVlcnlSZXNwb25zZRINCgVxdWVyeRgBIAEoCRIVCg1vdXRwdXRfZm9ybWF0GAIgASgJEikKBnJlc3VsdBgDIAEoCzIZLmdhemVsLmFwaS52MS5RdWVyeVJlc3VsdBILCgNyYXcYBCABKAkiOQoLUXVlcnlSZXN1bHQSKgoHdGFyZ2V0cxgBIAMoCzIZLmdhemVsLmFwaS52MS5CYXplbFRhcmdldCJhChJTdHJlYW1RdWVyeVJlcXVlc3QSDQoFcXVlcnkYASABKAkSFQoNb3V0cHV0X2Zvcm1hdBgCIAEoCRIRCglwYXJzZV94bWwYAyABKAgSEgoKcXVlcnlfdHlwZRgEIAEoCSJvChNTdHJlYW1RdWVyeVJlc3BvbnNlEisKBnRhcmdldBgBIAEoCzIZLmdhemVsLmFwaS52MS5CYXplbFRhcmdldEgAEhIKCHJhd19saW5lGAIgASgJSAASDwoFZXJyb3IYAyABKAlIAEIGCgRkYXRhIkYKEkJ1aWxkVGFyZ2V0UmVxdWVzdBIOCgZ0YXJnZXQYASABKAkSDwoHb3B0aW9ucxgCIAMoCRIPCgdjb21tYW5kGAMgASgJIlUKE0J1aWxkVGFyZ2V0UmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBIOCgZvdXRwdXQYAiABKAkSDgoGc3RkZXJyGAMgASgJEg0KBWVycm9yGAQgASgJIjUKElN0cmVhbUJ1aWxkUmVxdWVzdBIOCgZ0YXJnZXQYASABKAkSDwoHb3B0aW9ucxgCIAMoCSKjAQoTU3RyZWFtQnVpbGRSZXNwb25zZRIQCgZvdXRwdXQYASABKAlIABIPCgVlcnJvchgCIAEoCUgAEi8KCHByb2dyZXNzGAMgASgLMhsuZ2F6ZWwuYXBpLnYxLkJ1aWxkUHJvZ3Jlc3NIABIvCghjb21wbGV0ZRgEIAEoCzIbLmdhemVsLmFwaS52MS5CdWlsZENvbXBsZXRlSABCBwoFZXZlbnQiWQoNQnVpbGRQcm9ncmVzcxIZChFhY3Rpb25zX2NvbXBsZXRlZBgBIAEoBRIVCg1hY3Rpb25zX3RvdGFsGAIgASgFEhYKDmN1cnJlbnRfYWN0aW9uGAMgASgJIkgKDUJ1aWxkQ29tcGxldGUSDwoHc3VjY2VzcxgBIAEoCBIRCglleGl0X2NvZGUYAiABKAUSEwoLZHVyYXRpb25fbXMYAyABKAMiFwoVR2V0TW9kdWxlR3JhcGhSZXF1ZXN0IrcBChZHZXRNb2R1bGVHcmFwaFJlc3BvbnNlEgwKBHJvb3QYASABKAkSJQoHbW9kdWxlcxgCIAMoCzIULmdhemVsLmFwaS52MS5Nb2R1bGUSNAoMZGVwZW5kZW5jaWVzGAMgAygLMh4uZ2F6ZWwuYXBpLnYxLk1vZHVsZURlcGVuZGVuY3kSMgoKc3RhdGlzdGljcxgEIAEoCzIeLmdhemVsLmFwaS52MS5Nb2R1bGVTdGF0aXN0aWNzIn8KEE1vZHVsZVN0YXRpc3RpY3MSFQoNdG90YWxfbW9kdWxlcxgBIAEoBRIbChNkaXJlY3RfZGVwZW5kZW5jaWVzGAIgASgFEhgKEGRldl9kZXBlbmRlbmNpZXMYAyABKAUSHQoVaW5kaXJlY3RfZGVwZW5kZW5jaWVzGAQgASgFIisKFEdldE1vZHVsZUluZm9SZXF1ZXN0EhMKC21vZHVsZV9uYW1lGAEgASgJIj0KFUdldE1vZHVsZUluZm9SZXNwb25zZRIkCgZtb2R1bGUYASABKAsyFC5nYXplbC5hcGkudjEuTW9kdWxlIisKGEdldE1vZHVsZUdyYXBoRG90UmVxdWVzdBIPCgdvcHRpb25zGAEgAygJIigKGUdldE1vZHVsZUdyYXBoRG90UmVzcG9uc2USCwoDZG90GAEgASgJIhoKGEdldFF1ZXJ5VGVtcGxhdGVzUmVxdWVzdCJLChlHZXRRdWVyeVRlbXBsYXRlc1Jlc3BvbnNlEi4KCXRlbXBsYXRlcxgBIAMoCzIbLmdhemVsLmFwaS52MS5RdWVyeVRlbXBsYXRlIhgKFkdldFNhdmVkUXVlcmllc1JlcXVlc3QiRAoXR2V0U2F2ZWRRdWVyaWVzUmVzcG9uc2USKQoHcXVlcmllcxgBIAMoCzIYLmdhemVsLmFwaS52MS5TYXZlZFF1ZXJ5IkQKEFNhdmVRdWVyeVJlcXVlc3QSDAoEbmFtZRgBIAEoCRINCgVxdWVyeRgCIAEoCRITCgtkZXNjcmlwdGlvbhgDIAEoCSI8ChFTYXZlUXVlcnlSZXNwb25zZRInCgVxdWVyeRgBIAEoCzIYLmdhemVsLmFwaS52MS5TYXZlZFF1ZXJ5IiAKEkRlbGV0ZVF1ZXJ5UmVxdWVzdBIKCgJpZBgBIAEoCSImChNEZWxldGVRdWVyeVJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgiMwoQU3RyZWFtUnVuUmVxdWVzdBIOCgZ0YXJnZXQYASABKAkSDwoHb3B0aW9ucxgCIAMoCSKdAQoRU3RyZWFtUnVuUmVzcG9uc2USEAoGb3V0cHV0GAEgASgJSAASDwoFZXJyb3IYAiABKAlIABItCghwcm9ncmVzcxgDIAEoCzIZLmdhemVsLmFwaS52MS5SdW5Qcm9ncmVzc0gAEi0KCGNvbXBsZXRlGAQgASgLMhkuZ2F6ZWwuYXBpLnYxLlJ1bkNvbXBsZXRlSABCBwoFZXZlbnQiJQoLUnVuUHJvZ3Jlc3MSFgoOY3VycmVudF9hY3Rpb24YASABKAkiRgoLUnVuQ29tcGxldGUSDwoHc3VjY2VzcxgBIAEoCBIRCglleGl0X2NvZGUYAiABKAUSEwoLZHVyYXRpb25fbXMYAyABKAMiIwoTR2V0QnVpbGRGaWxlUmVxdWVzdBIMCgRwYXRoGAEgASgJInQKFEdldEJ1aWxkRmlsZVJlc3BvbnNlEgwKBHBhdGgYASABKAkSDwoHY29udGVudBgCIAEoCRIuCgd0YXJnZXRzGAMgAygLMh0uZ2F6ZWwuYXBpLnYxLkJ1aWxkRmlsZVRhcmdldBINCgVsaW5lcxgEIAEoBSJACg9CdWlsZEZpbGVUYXJnZXQSEQoJcnVsZV90eXBlGAEgASgJEgwKBG5hbWUYAiABKAkSDAoEbGluZRgDIAEoBSIlChVHZXRSdWxlc0J5RmlsZVJlcXVlc3QSDAoEZmlsZRgBIAEoCSJIChZHZXRSdWxlc0J5RmlsZVJlc3BvbnNlEgwKBGZpbGUYASABKAkSIAoFcnVsZXMYAiADKAsyES5ibGF6ZV9xdWVyeS5SdWxlIj0KFFNlYXJjaEluRmlsZXNSZXF1ZXN0Eg0KBXF1ZXJ5GAEgASgJEhYKDmNhc2Vfc2Vuc2l0aXZlGAIgASgIInoKFVNlYXJjaEluRmlsZXNSZXNwb25zZRINCgVxdWVyeRgBIAEoCRIWCg5jYXNlX3NlbnNpdGl2ZRgCIAEoCBINCgV0b3RhbBgDIAEoBRIrCgdyZXN1bHRzGAQgAygLMhouZ2F6ZWwuYXBpLnYxLlNlYXJjaFJlc3VsdCI7CgxTZWFyY2hSZXN1bHQSDAoEZmlsZRgBIAEoCRIMCgRsaW5lGAIgASgFEg8KB2NvbnRlbnQYAyABKAkiKQoYR2V0Q29tbWFuZEhpc3RvcnlSZXF1ZXN0Eg0KBWxpbWl0GAEgASgFIk4KGUdldENvbW1hbmRIaXN0b3J5UmVzcG9uc2USMQoHaGlzdG9yeRgBIAMoCzIgLmdhemVsLmFwaS52MS5Db21tYW5kSGlzdG9yeUl0ZW0iqgEKEkNvbW1hbmRIaXN0b3J5SXRlbRIKCgJpZBgBIAEoCRIPCgdjb21tYW5kGAIgASgJEg4KBnRhcmdldBgDIAEoCRIPCgdvcHRpb25zGAQgAygJEhEKCXRpbWVzdGFtcBgFIAEoAxIPCgdzdWNjZXNzGAYgASgIEg4KBm91dHB1dBgHIAEoCRINCgVlcnJvchgIIAEoCRITCgtkdXJhdGlvbl9tcxgJIAEoBSIyChxVcGRhdGVCYXplbEV4ZWN1dGFibGVSZXF1ZXN0EhIKCmV4ZWN1dGFibGUYASABKAkiWAodVXBkYXRlQmF6ZWxFeGVjdXRhYmxlUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBIPCgdtZXNzYWdlGAIgASgJEhUKDWRldGVjdGVkX3BhdGgYAyABKAkynBYKDEdhemVsU2VydmljZRJhChBHZXRXb3Jrc3BhY2VJbmZvEiUuZ2F6ZWwuYXBpLnYxLkdldFdvcmtzcGFjZUluZm9SZXF1ZXN0GiYuZ2F6ZWwuYXBpLnYxLkdldFdvcmtzcGFjZUluZm9SZXNwb25zZRJqChNHZXRDdXJyZW50V29ya3NwYWNlEiguZ2F6ZWwuYXBpLnYxLkdldEN1cnJlbnRXb3Jrc3BhY2VSZXF1ZXN0GikuZ2F6ZWwuYXBpLnYxLkdldEN1cnJlbnRXb3Jrc3BhY2VSZXNwb25zZRJbCg5TY2FuV29ya3NwYWNlcxIjLmdhemVsLmFwaS52MS5TY2FuV29ya3NwYWNlc1JlcXVlc3QaJC5nYXplbC5hcGkudjEuU2NhbldvcmtzcGFjZXNSZXNwb25zZRJeCg9Td2l0Y2hXb3Jrc3BhY2USJC5nYXplbC5hcGkudjEuU3dpdGNoV29ya3NwYWNlUmVxdWVzdBolLmdhemVsLmFwaS52MS5Td2l0Y2hXb3Jrc3BhY2VSZXNwb25zZRJkChFHZXRXb3Jrc3BhY2VGaWxlcxImLmdhemVsLmFwaS52MS5HZXRXb3Jrc3BhY2VGaWxlc1JlcXVlc3QaJy5nYXplbC5hcGkudjEuR2V0V29ya3NwYWNlRmlsZXNSZXNwb25zZRJVCgxHZXRCYXplbEluZm8SIS5nYXplbC5hcGkudjEuR2V0QmF6ZWxJbmZvUmVxdWVzdBoiLmdhemVsLmFwaS52MS5HZXRCYXplbEluZm9SZXNwb25zZRJUCgtMaXN0VGFyZ2V0cxIgLmdhemVsLmFwaS52MS5MaXN0VGFyZ2V0c1JlcXVlc3QaIS5nYXplbC5hcGkudjEuTGlzdFRhcmdldHNSZXNwb25zZTABEkwKCUdldFRhcmdldBIeLmdhemVsLmFwaS52MS5HZXRUYXJnZXRSZXF1ZXN0Gh8uZ2F6ZWwuYXBpLnYxLkdldFRhcmdldFJlc3BvbnNlEnAKFUdldFRhcmdldERlcGVuZGVuY2llcxIqLmdhemVsLmFwaS52MS5HZXRUYXJnZXREZXBlbmRlbmNpZXNSZXF1ZXN0GisuZ2F6ZWwuYXBpLnYxLkdldFRhcmdldERlcGVuZGVuY2llc1Jlc3BvbnNlEmEKEEdldFRhcmdldE91dHB1dHMSJS5nYXplbC5hcGkudjEuR2V0VGFyZ2V0T3V0cHV0c1JlcXVlc3QaJi5nYXplbC5hcGkudjEuR2V0VGFyZ2V0T3V0cHV0c1Jlc3BvbnNlEnMKFkdldFJldmVyc2VEZXBlbmRlbmNpZXMSKy5nYXplbC5hcGkudjEuR2V0UmV2ZXJzZURlcGVuZGVuY2llc1JlcXVlc3QaLC5nYXplbC5hcGkudjEuR2V0UmV2ZXJzZURlcGVuZGVuY2llc1Jlc3BvbnNlEmcKEkdldE91dHB1dENvbnN1bWVycxInLmdhemVsLmFwaS52MS5HZXRPdXRwdXRDb25zdW1lcnNSZXF1ZXN0GiguZ2F6ZWwuYXBpLnYxLkdldE91dHB1dENvbnN1bWVyc1Jlc3BvbnNlEloKDVNlYXJjaFRhcmdldHMSIi5nYXplbC5hcGkudjEuU2VhcmNoVGFyZ2V0c1JlcXVlc3QaIy5nYXplbC5hcGkudjEuU2VhcmNoVGFyZ2V0c1Jlc3BvbnNlMAESVQoMRXhlY3V0ZVF1ZXJ5EiEuZ2F6ZWwuYXBpLnYxLkV4ZWN1dGVRdWVyeVJlcXVlc3QaIi5nYXplbC5hcGkudjEuRXhlY3V0ZVF1ZXJ5UmVzcG9uc2USVAoLU3RyZWFtUXVlcnkSIC5nYXplbC5hcGkudjEuU3RyZWFtUXVlcnlSZXF1ZXN0GiEuZ2F6ZWwuYXBpLnYxLlN0cmVhbVF1ZXJ5UmVzcG9uc2UwARJkChFHZXRRdWVyeVRlbXBsYXRlcxImLmdhemVsLmFwaS52MS5HZXRRdWVyeVRlbXBsYXRlc1JlcXVlc3QaJy5nYXplbC5hcGkudjEuR2V0UXVlcnlUZW1wbGF0ZXNSZXNwb25zZRJeCg9HZXRTYXZlZFF1ZXJpZXMSJC5nYXplbC5hcGkudjEuR2V0U2F2ZWRRdWVyaWVzUmVxdWVzdBolLmdhemVsLmFwaS52MS5HZXRTYXZlZFF1ZXJpZXNSZXNwb25zZRJMCglTYXZlUXVlcnkSHi5nYXplbC5hcGkudjEuU2F2ZVF1ZXJ5UmVxdWVzdBofLmdhemVsLmFwaS52MS5TYXZlUXVlcnlSZXNwb25zZRJSCgtEZWxldGVRdWVyeRIgLmdhemVsLmFwaS52MS5EZWxldGVRdWVyeVJlcXVlc3QaIS5nYXplbC5hcGkudjEuRGVsZXRlUXVlcnlSZXNwb25zZRJSCgtCdWlsZFRhcmdldBIgLmdhemVsLmFwaS52MS5CdWlsZFRhcmdldFJlcXVlc3QaIS5nYXplbC5hcGkudjEuQnVpbGRUYXJnZXRSZXNwb25zZRJUCgtTdHJlYW1CdWlsZBIgLmdhemVsLmFwaS52MS5TdHJlYW1CdWlsZFJlcXVlc3QaIS5nYXplbC5hcGkudjEuU3RyZWFtQnVpbGRSZXNwb25zZTABEk4KCVN0cmVhbVJ1bhIeLmdhemVsLmFwaS52MS5TdHJlYW1SdW5SZXF1ZXN0Gh8uZ2F6ZWwuYXBpLnYxLlN0cmVhbVJ1blJlc3BvbnNlMAESWwoOR2V0TW9kdWxlR3JhcGgSIy5nYXplbC5hcGkudjEuR2V0TW9kdWxlR3JhcGhSZXF1ZXN0GiQuZ2F6ZWwuYXBpLnYxLkdldE1vZHVsZUdyYXBoUmVzcG9uc2USWAoNR2V0TW9kdWxlSW5mbxIiLmdhemVsLmFwaS52MS5HZXRNb2R1bGVJbmZvUmVxdWVzdBojLmdhemVsLmFwaS52MS5HZXRNb2R1bGVJbmZvUmVzcG9uc2USZAoRR2V0TW9kdWxlR3JhcGhEb3QSJi5nYXplbC5hcGkudjEuR2V0TW9kdWxlR3JhcGhEb3RSZXF1ZXN0GicuZ2F6ZWwuYXBpLnYxLkdldE1vZHVsZUdyYXBoRG90UmVzcG9uc2USVQoMR2V0QnVpbGRGaWxlEiEuZ2F6ZWwuYXBpLnYxLkdldEJ1aWxkRmlsZVJlcXVlc3QaIi5nYXplbC5hcGkudjEuR2V0QnVpbGRGaWxlUmVzcG9uc2USWwoOR2V0UnVsZXNCeUZpbGUSIy5nYXplbC5hcGkudjEuR2V0UnVsZXNCeUZpbGVSZXF1ZXN0GiQuZ2F6ZWwuYXBpLnYxLkdldFJ1bGVzQnlGaWxlUmVzcG9uc2USWAoNU2VhcmNoSW5GaWxlcxIiLmdhemVsLmFwaS52MS5TZWFyY2hJbkZpbGVzUmVxdWVzdBojLmdhemVsLmFwaS52MS5TZWFyY2hJbkZpbGVzUmVzcG9uc2USZAoRR2V0Q29tbWFuZEhpc3RvcnkSJi5nYXplbC5hcGkudjEuR2V0Q29tbWFuZEhpc3RvcnlSZXF1ZXN0GicuZ2F6ZWwuYXBpLnYxLkdldENvbW1hbmRIaXN0b3J5UmVzcG9uc2UScAoVVXBkYXRlQmF6ZWxFeGVjdXRhYmxlEiouZ2F6ZWwuYXBpLnYxLlVwZGF0ZUJhemVsRXhlY3V0YWJsZVJlcXVlc3QaKy5nYXplbC5hcGkudjEuVXBkYXRlQmF6ZWxFeGVjdXRhYmxlUmVzcG9uc2VCKVonZ2l0aHViLmNvbS9qc3BlYXJzL2dhemVsL2FwaS92MTtnYXplbHYxYgZwcm90bzM", [file_google_protobuf_timestamp, file_build]);

/**
 * Describes the message gazel.api.v1.WorkspaceInfo.
 * Use `create(WorkspaceInfoSchema)` to create a new message.
 */
export const WorkspaceInfoSchema = /*@__PURE__*/
  messageDesc(file_gazel, 0);

/**
 * Describes the message gazel.api.v1.BazelInfo.
 * Use `create(BazelInfoSchema)` to create a new message.
 */
export const BazelInfoSchema = /*@__PURE__*/
  messageDesc(file_gazel, 1);

/**
 * Describes the message gazel.api.v1.BazelAttribute.
 * Use `create(BazelAttributeSchema)` to create a new message.
 */
export const BazelAttributeSchema = /*@__PURE__*/
  messageDesc(file_gazel, 2);

/**
 * Describes the message gazel.api.v1.StringDictEntry.
 * Use `create(StringDictEntrySchema)` to create a new message.
 */
export const StringDictEntrySchema = /*@__PURE__*/
  messageDesc(file_gazel, 3);

/**
 * Describes the message gazel.api.v1.BazelTarget.
 * Use `create(BazelTargetSchema)` to create a new message.
 */
export const BazelTargetSchema = /*@__PURE__*/
  messageDesc(file_gazel, 4);

/**
 * Describes the message gazel.api.v1.BuildFile.
 * Use `create(BuildFileSchema)` to create a new message.
 */
export const BuildFileSchema = /*@__PURE__*/
  messageDesc(file_gazel, 5);

/**
 * Describes the message gazel.api.v1.QueryTemplate.
 * Use `create(QueryTemplateSchema)` to create a new message.
 */
export const QueryTemplateSchema = /*@__PURE__*/
  messageDesc(file_gazel, 6);

/**
 * Describes the message gazel.api.v1.SavedQuery.
 * Use `create(SavedQuerySchema)` to create a new message.
 */
export const SavedQuerySchema = /*@__PURE__*/
  messageDesc(file_gazel, 7);

/**
 * Describes the message gazel.api.v1.CommandHistory.
 * Use `create(CommandHistorySchema)` to create a new message.
 */
export const CommandHistorySchema = /*@__PURE__*/
  messageDesc(file_gazel, 8);

/**
 * Describes the message gazel.api.v1.Module.
 * Use `create(ModuleSchema)` to create a new message.
 */
export const ModuleSchema = /*@__PURE__*/
  messageDesc(file_gazel, 9);

/**
 * Describes the message gazel.api.v1.Location.
 * Use `create(LocationSchema)` to create a new message.
 */
export const LocationSchema = /*@__PURE__*/
  messageDesc(file_gazel, 10);

/**
 * Describes the message gazel.api.v1.Dependency.
 * Use `create(DependencySchema)` to create a new message.
 */
export const DependencySchema = /*@__PURE__*/
  messageDesc(file_gazel, 11);

/**
 * Describes the message gazel.api.v1.ExtensionUsage.
 * Use `create(ExtensionUsageSchema)` to create a new message.
 */
export const ExtensionUsageSchema = /*@__PURE__*/
  messageDesc(file_gazel, 12);

/**
 * Describes the message gazel.api.v1.ModuleDependency.
 * Use `create(ModuleDependencySchema)` to create a new message.
 */
export const ModuleDependencySchema = /*@__PURE__*/
  messageDesc(file_gazel, 13);

/**
 * Describes the message gazel.api.v1.GetWorkspaceInfoRequest.
 * Use `create(GetWorkspaceInfoRequestSchema)` to create a new message.
 */
export const GetWorkspaceInfoRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 14);

/**
 * Describes the message gazel.api.v1.GetWorkspaceInfoResponse.
 * Use `create(GetWorkspaceInfoResponseSchema)` to create a new message.
 */
export const GetWorkspaceInfoResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 15);

/**
 * Describes the message gazel.api.v1.GetCurrentWorkspaceRequest.
 * Use `create(GetCurrentWorkspaceRequestSchema)` to create a new message.
 */
export const GetCurrentWorkspaceRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 16);

/**
 * Describes the message gazel.api.v1.GetCurrentWorkspaceResponse.
 * Use `create(GetCurrentWorkspaceResponseSchema)` to create a new message.
 */
export const GetCurrentWorkspaceResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 17);

/**
 * Describes the message gazel.api.v1.ScanWorkspacesRequest.
 * Use `create(ScanWorkspacesRequestSchema)` to create a new message.
 */
export const ScanWorkspacesRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 18);

/**
 * Describes the message gazel.api.v1.ScanWorkspacesResponse.
 * Use `create(ScanWorkspacesResponseSchema)` to create a new message.
 */
export const ScanWorkspacesResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 19);

/**
 * Describes the message gazel.api.v1.ScanWorkspacesResponse.Workspace.
 * Use `create(ScanWorkspacesResponse_WorkspaceSchema)` to create a new message.
 */
export const ScanWorkspacesResponse_WorkspaceSchema = /*@__PURE__*/
  messageDesc(file_gazel, 19, 0);

/**
 * Describes the message gazel.api.v1.SwitchWorkspaceRequest.
 * Use `create(SwitchWorkspaceRequestSchema)` to create a new message.
 */
export const SwitchWorkspaceRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 20);

/**
 * Describes the message gazel.api.v1.SwitchWorkspaceResponse.
 * Use `create(SwitchWorkspaceResponseSchema)` to create a new message.
 */
export const SwitchWorkspaceResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 21);

/**
 * Describes the message gazel.api.v1.GetWorkspaceFilesRequest.
 * Use `create(GetWorkspaceFilesRequestSchema)` to create a new message.
 */
export const GetWorkspaceFilesRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 22);

/**
 * Describes the message gazel.api.v1.GetWorkspaceFilesResponse.
 * Use `create(GetWorkspaceFilesResponseSchema)` to create a new message.
 */
export const GetWorkspaceFilesResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 23);

/**
 * Describes the message gazel.api.v1.GetWorkspaceFilesResponse.WorkspaceFile.
 * Use `create(GetWorkspaceFilesResponse_WorkspaceFileSchema)` to create a new message.
 */
export const GetWorkspaceFilesResponse_WorkspaceFileSchema = /*@__PURE__*/
  messageDesc(file_gazel, 23, 0);

/**
 * Describes the message gazel.api.v1.GetBazelInfoRequest.
 * Use `create(GetBazelInfoRequestSchema)` to create a new message.
 */
export const GetBazelInfoRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 24);

/**
 * Describes the message gazel.api.v1.GetBazelInfoResponse.
 * Use `create(GetBazelInfoResponseSchema)` to create a new message.
 */
export const GetBazelInfoResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 25);

/**
 * Describes the message gazel.api.v1.ListTargetsRequest.
 * Use `create(ListTargetsRequestSchema)` to create a new message.
 */
export const ListTargetsRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 26);

/**
 * Describes the message gazel.api.v1.ListTargetsResponse.
 * Use `create(ListTargetsResponseSchema)` to create a new message.
 */
export const ListTargetsResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 27);

/**
 * Describes the message gazel.api.v1.ListTargetsComplete.
 * Use `create(ListTargetsCompleteSchema)` to create a new message.
 */
export const ListTargetsCompleteSchema = /*@__PURE__*/
  messageDesc(file_gazel, 28);

/**
 * Describes the message gazel.api.v1.TargetList.
 * Use `create(TargetListSchema)` to create a new message.
 */
export const TargetListSchema = /*@__PURE__*/
  messageDesc(file_gazel, 29);

/**
 * Describes the message gazel.api.v1.GetTargetRequest.
 * Use `create(GetTargetRequestSchema)` to create a new message.
 */
export const GetTargetRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 30);

/**
 * Describes the message gazel.api.v1.GetTargetResponse.
 * Use `create(GetTargetResponseSchema)` to create a new message.
 */
export const GetTargetResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 31);

/**
 * Describes the message gazel.api.v1.GetTargetDependenciesRequest.
 * Use `create(GetTargetDependenciesRequestSchema)` to create a new message.
 */
export const GetTargetDependenciesRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 32);

/**
 * Describes the message gazel.api.v1.GetTargetDependenciesResponse.
 * Use `create(GetTargetDependenciesResponseSchema)` to create a new message.
 */
export const GetTargetDependenciesResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 33);

/**
 * Describes the message gazel.api.v1.GetTargetOutputsRequest.
 * Use `create(GetTargetOutputsRequestSchema)` to create a new message.
 */
export const GetTargetOutputsRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 34);

/**
 * Describes the message gazel.api.v1.GetTargetOutputsResponse.
 * Use `create(GetTargetOutputsResponseSchema)` to create a new message.
 */
export const GetTargetOutputsResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 35);

/**
 * Describes the message gazel.api.v1.GetReverseDependenciesRequest.
 * Use `create(GetReverseDependenciesRequestSchema)` to create a new message.
 */
export const GetReverseDependenciesRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 36);

/**
 * Describes the message gazel.api.v1.GetReverseDependenciesResponse.
 * Use `create(GetReverseDependenciesResponseSchema)` to create a new message.
 */
export const GetReverseDependenciesResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 37);

/**
 * Describes the message gazel.api.v1.GetOutputConsumersRequest.
 * Use `create(GetOutputConsumersRequestSchema)` to create a new message.
 */
export const GetOutputConsumersRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 38);

/**
 * Describes the message gazel.api.v1.GetOutputConsumersResponse.
 * Use `create(GetOutputConsumersResponseSchema)` to create a new message.
 */
export const GetOutputConsumersResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 39);

/**
 * Describes the message gazel.api.v1.SearchTargetsRequest.
 * Use `create(SearchTargetsRequestSchema)` to create a new message.
 */
export const SearchTargetsRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 40);

/**
 * Describes the message gazel.api.v1.SearchTargetsResponse.
 * Use `create(SearchTargetsResponseSchema)` to create a new message.
 */
export const SearchTargetsResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 41);

/**
 * Describes the message gazel.api.v1.SearchTargetsComplete.
 * Use `create(SearchTargetsCompleteSchema)` to create a new message.
 */
export const SearchTargetsCompleteSchema = /*@__PURE__*/
  messageDesc(file_gazel, 42);

/**
 * Describes the message gazel.api.v1.ExecuteQueryRequest.
 * Use `create(ExecuteQueryRequestSchema)` to create a new message.
 */
export const ExecuteQueryRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 43);

/**
 * Describes the message gazel.api.v1.ExecuteQueryResponse.
 * Use `create(ExecuteQueryResponseSchema)` to create a new message.
 */
export const ExecuteQueryResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 44);

/**
 * Describes the message gazel.api.v1.QueryResult.
 * Use `create(QueryResultSchema)` to create a new message.
 */
export const QueryResultSchema = /*@__PURE__*/
  messageDesc(file_gazel, 45);

/**
 * Describes the message gazel.api.v1.StreamQueryRequest.
 * Use `create(StreamQueryRequestSchema)` to create a new message.
 */
export const StreamQueryRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 46);

/**
 * Describes the message gazel.api.v1.StreamQueryResponse.
 * Use `create(StreamQueryResponseSchema)` to create a new message.
 */
export const StreamQueryResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 47);

/**
 * Describes the message gazel.api.v1.BuildTargetRequest.
 * Use `create(BuildTargetRequestSchema)` to create a new message.
 */
export const BuildTargetRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 48);

/**
 * Describes the message gazel.api.v1.BuildTargetResponse.
 * Use `create(BuildTargetResponseSchema)` to create a new message.
 */
export const BuildTargetResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 49);

/**
 * Describes the message gazel.api.v1.StreamBuildRequest.
 * Use `create(StreamBuildRequestSchema)` to create a new message.
 */
export const StreamBuildRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 50);

/**
 * Describes the message gazel.api.v1.StreamBuildResponse.
 * Use `create(StreamBuildResponseSchema)` to create a new message.
 */
export const StreamBuildResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 51);

/**
 * Describes the message gazel.api.v1.BuildProgress.
 * Use `create(BuildProgressSchema)` to create a new message.
 */
export const BuildProgressSchema = /*@__PURE__*/
  messageDesc(file_gazel, 52);

/**
 * Describes the message gazel.api.v1.BuildComplete.
 * Use `create(BuildCompleteSchema)` to create a new message.
 */
export const BuildCompleteSchema = /*@__PURE__*/
  messageDesc(file_gazel, 53);

/**
 * Describes the message gazel.api.v1.GetModuleGraphRequest.
 * Use `create(GetModuleGraphRequestSchema)` to create a new message.
 */
export const GetModuleGraphRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 54);

/**
 * Describes the message gazel.api.v1.GetModuleGraphResponse.
 * Use `create(GetModuleGraphResponseSchema)` to create a new message.
 */
export const GetModuleGraphResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 55);

/**
 * Describes the message gazel.api.v1.ModuleStatistics.
 * Use `create(ModuleStatisticsSchema)` to create a new message.
 */
export const ModuleStatisticsSchema = /*@__PURE__*/
  messageDesc(file_gazel, 56);

/**
 * Describes the message gazel.api.v1.GetModuleInfoRequest.
 * Use `create(GetModuleInfoRequestSchema)` to create a new message.
 */
export const GetModuleInfoRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 57);

/**
 * Describes the message gazel.api.v1.GetModuleInfoResponse.
 * Use `create(GetModuleInfoResponseSchema)` to create a new message.
 */
export const GetModuleInfoResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 58);

/**
 * Describes the message gazel.api.v1.GetModuleGraphDotRequest.
 * Use `create(GetModuleGraphDotRequestSchema)` to create a new message.
 */
export const GetModuleGraphDotRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 59);

/**
 * Describes the message gazel.api.v1.GetModuleGraphDotResponse.
 * Use `create(GetModuleGraphDotResponseSchema)` to create a new message.
 */
export const GetModuleGraphDotResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 60);

/**
 * Describes the message gazel.api.v1.GetQueryTemplatesRequest.
 * Use `create(GetQueryTemplatesRequestSchema)` to create a new message.
 */
export const GetQueryTemplatesRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 61);

/**
 * Describes the message gazel.api.v1.GetQueryTemplatesResponse.
 * Use `create(GetQueryTemplatesResponseSchema)` to create a new message.
 */
export const GetQueryTemplatesResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 62);

/**
 * Describes the message gazel.api.v1.GetSavedQueriesRequest.
 * Use `create(GetSavedQueriesRequestSchema)` to create a new message.
 */
export const GetSavedQueriesRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 63);

/**
 * Describes the message gazel.api.v1.GetSavedQueriesResponse.
 * Use `create(GetSavedQueriesResponseSchema)` to create a new message.
 */
export const GetSavedQueriesResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 64);

/**
 * Describes the message gazel.api.v1.SaveQueryRequest.
 * Use `create(SaveQueryRequestSchema)` to create a new message.
 */
export const SaveQueryRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 65);

/**
 * Describes the message gazel.api.v1.SaveQueryResponse.
 * Use `create(SaveQueryResponseSchema)` to create a new message.
 */
export const SaveQueryResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 66);

/**
 * Describes the message gazel.api.v1.DeleteQueryRequest.
 * Use `create(DeleteQueryRequestSchema)` to create a new message.
 */
export const DeleteQueryRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 67);

/**
 * Describes the message gazel.api.v1.DeleteQueryResponse.
 * Use `create(DeleteQueryResponseSchema)` to create a new message.
 */
export const DeleteQueryResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 68);

/**
 * Describes the message gazel.api.v1.StreamRunRequest.
 * Use `create(StreamRunRequestSchema)` to create a new message.
 */
export const StreamRunRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 69);

/**
 * Describes the message gazel.api.v1.StreamRunResponse.
 * Use `create(StreamRunResponseSchema)` to create a new message.
 */
export const StreamRunResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 70);

/**
 * Describes the message gazel.api.v1.RunProgress.
 * Use `create(RunProgressSchema)` to create a new message.
 */
export const RunProgressSchema = /*@__PURE__*/
  messageDesc(file_gazel, 71);

/**
 * Describes the message gazel.api.v1.RunComplete.
 * Use `create(RunCompleteSchema)` to create a new message.
 */
export const RunCompleteSchema = /*@__PURE__*/
  messageDesc(file_gazel, 72);

/**
 * Describes the message gazel.api.v1.GetBuildFileRequest.
 * Use `create(GetBuildFileRequestSchema)` to create a new message.
 */
export const GetBuildFileRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 73);

/**
 * Describes the message gazel.api.v1.GetBuildFileResponse.
 * Use `create(GetBuildFileResponseSchema)` to create a new message.
 */
export const GetBuildFileResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 74);

/**
 * Describes the message gazel.api.v1.BuildFileTarget.
 * Use `create(BuildFileTargetSchema)` to create a new message.
 */
export const BuildFileTargetSchema = /*@__PURE__*/
  messageDesc(file_gazel, 75);

/**
 * Describes the message gazel.api.v1.GetRulesByFileRequest.
 * Use `create(GetRulesByFileRequestSchema)` to create a new message.
 */
export const GetRulesByFileRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 76);

/**
 * Describes the message gazel.api.v1.GetRulesByFileResponse.
 * Use `create(GetRulesByFileResponseSchema)` to create a new message.
 */
export const GetRulesByFileResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 77);

/**
 * Describes the message gazel.api.v1.SearchInFilesRequest.
 * Use `create(SearchInFilesRequestSchema)` to create a new message.
 */
export const SearchInFilesRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 78);

/**
 * Describes the message gazel.api.v1.SearchInFilesResponse.
 * Use `create(SearchInFilesResponseSchema)` to create a new message.
 */
export const SearchInFilesResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 79);

/**
 * Describes the message gazel.api.v1.SearchResult.
 * Use `create(SearchResultSchema)` to create a new message.
 */
export const SearchResultSchema = /*@__PURE__*/
  messageDesc(file_gazel, 80);

/**
 * Describes the message gazel.api.v1.GetCommandHistoryRequest.
 * Use `create(GetCommandHistoryRequestSchema)` to create a new message.
 */
export const GetCommandHistoryRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 81);

/**
 * Describes the message gazel.api.v1.GetCommandHistoryResponse.
 * Use `create(GetCommandHistoryResponseSchema)` to create a new message.
 */
export const GetCommandHistoryResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 82);

/**
 * Describes the message gazel.api.v1.CommandHistoryItem.
 * Use `create(CommandHistoryItemSchema)` to create a new message.
 */
export const CommandHistoryItemSchema = /*@__PURE__*/
  messageDesc(file_gazel, 83);

/**
 * Describes the message gazel.api.v1.UpdateBazelExecutableRequest.
 * Use `create(UpdateBazelExecutableRequestSchema)` to create a new message.
 */
export const UpdateBazelExecutableRequestSchema = /*@__PURE__*/
  messageDesc(file_gazel, 84);

/**
 * Describes the message gazel.api.v1.UpdateBazelExecutableResponse.
 * Use `create(UpdateBazelExecutableResponseSchema)` to create a new message.
 */
export const UpdateBazelExecutableResponseSchema = /*@__PURE__*/
  messageDesc(file_gazel, 85);

/**
 * @generated from service gazel.api.v1.GazelService
 */
export const GazelService = /*@__PURE__*/
  serviceDesc(file_gazel, 0);

