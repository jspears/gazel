load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@rules_proto//proto:defs.bzl", "proto_library")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config")
load("//tools:typescript.bzl", "ts_proto_library", "ts_proto_library_bundle")
load("@aspect_rules_js//js:defs.bzl", "js_library")

npm_link_all_packages(name = "node_modules")

# see [https://github.com/aspect-build/rules_ts/tree/main/examples]
gazel_srcs = ["gazel.proto"]
logging_srcs = ["logging.proto"]
# Define the proto library
proto_library(
    name = "gazel_proto",
    srcs = gazel_srcs,
    visibility = ["//visibility:public"],
    deps = [
       "@com_google_protobuf//:any_proto",
       "@com_google_protobuf//:timestamp_proto",
        
    ],
)
proto_library(
    name = "logging_proto",
    srcs = logging_srcs,
    visibility = ["//visibility:public"],
    deps = [
       "@com_google_protobuf//:any_proto",
       "@com_google_protobuf//:timestamp_proto",
    ],
)

ts_proto_library(
    name = "gazel_ts_proto",
    proto = ":gazel_proto",
    node_modules = "//:node_modules",
    visibility = ["//visibility:public"],
)

ts_proto_library(
    name = "logging_ts_proto",
    proto = ":logging_proto",
    node_modules = "//:node_modules",
    visibility = ["//visibility:public"],
)
# Demonstrate that transitive tsconfig extends clauses work
ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    deps = [
        "tsconfig.json",
        "//:tsconfig",
    ],
)

ts_project(
    name = "index",
    srcs = ["index.ts"],
    tsconfig = ":tsconfig",
    allow_js=True,
    declaration_map = True,
    declaration = True,
    source_map = True,
    no_emit = False,
    deps = [
        ":logging_ts_proto",
        ":gazel_ts_proto",
        "//:tsconfig",
    ],
    visibility = ["//visibility:public"],
)

# js_library(
#     name = "index_lib",
#     srcs = [":index"],
#     visibility = ["//visibility:public"],
#     deps = [
#         ":logging_ts_proto",
#         ":gazel_ts_proto",
#     ],
# )
