load("@aspect_rules_js//js:defs.bzl", "js_binary", "js_library", "js_run_binary")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config", "ts_project")
load("@npm//:defs.bzl", "npm_link_all_packages")

package(default_visibility = ["//visibility:public"])

npm_link_all_packages(name = "node_modules")

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    visibility = ["//visibility:public"],
    deps = [
        "//:tsconfig",
    ],
)

# TypeScript compilation for server
ts_project(
    name = "server_ts",
    data = ["package.json"],
    tsconfig = ":tsconfig",
    deps = [
        ":node_modules",
        ":node_modules/@bufbuild/protobuf",
        ":node_modules/@connectrpc/connect",
        ":node_modules/@connectrpc/connect-node",
        ":node_modules/@types/node",
        ":node_modules/dotenv",
        "//proto:pkg",
    ],
)

# Server library for use by Electron
js_library(
    name = "server_lib",
    srcs = [":server_ts"],
    deps = [
        ":node_modules",
        "//:node_modules/@bufbuild/protobuf",
        "//:node_modules/@connectrpc/connect",
        "//proto:pkg",
    ],
)

# Server binary
js_binary(
    name = "run",
    chdir = package_name(),
    data = [
        "loader.ts",
        ":server_ts",
        ":node_modules",
        "//:node_modules",
        "//proto:pkg",
        ":node_modules/tsconfig-paths",
        "//:build_pb_root",
    ],
    entry_point = "main.js",
)

# Test target for searchTargets (run with `bazel run //server:searchTargets_test`)
# Note: This runs outside the sandbox so it has access to bazel/bazelisk in PATH
js_binary(
    name = "searchTargets_test",
    chdir = package_name(),
    data = [
        "loader.ts",
        "searchTargets.test.ts",
        ":server_ts",
        ":node_modules",
        "//:node_modules",
        "//proto:pkg",
        ":node_modules/tsconfig-paths",
        "//:build_pb_root",
    ],
    entry_point = "searchTargets.test.js",
    node_options = [
        "--import",
        "tsx",
        "--test",
    ],
)
