// @generated by protoc-gen-connect-es v1.7.0 with parameter "target=ts"
// @generated from file gazel.proto (package gazel.api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { BuildTargetRequest, BuildTargetResponse, ExecuteQueryRequest, ExecuteQueryResponse, GetCurrentWorkspaceRequest, GetCurrentWorkspaceResponse, GetModuleGraphRequest, GetModuleGraphResponse, GetReverseDependenciesRequest, GetReverseDependenciesResponse, GetTargetDependenciesRequest, GetTargetDependenciesResponse, GetTargetOutputsRequest, GetTargetOutputsResponse, GetTargetRequest, GetTargetResponse, GetWorkspaceInfoRequest, GetWorkspaceInfoResponse, ListTargetsRequest, ListTargetsResponse, ScanWorkspacesRequest, ScanWorkspacesResponse, SearchTargetsRequest, SearchTargetsResponse, StreamBuildRequest, StreamBuildResponse, StreamQueryRequest, StreamQueryResponse, SwitchWorkspaceRequest, SwitchWorkspaceResponse } from "./gazel_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service gazel.api.v1.GazelService
 */
export const GazelService = {
  typeName: "gazel.api.v1.GazelService",
  methods: {
    /**
     * Workspace operations
     *
     * @generated from rpc gazel.api.v1.GazelService.GetWorkspaceInfo
     */
    getWorkspaceInfo: {
      name: "GetWorkspaceInfo",
      I: GetWorkspaceInfoRequest,
      O: GetWorkspaceInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc gazel.api.v1.GazelService.GetCurrentWorkspace
     */
    getCurrentWorkspace: {
      name: "GetCurrentWorkspace",
      I: GetCurrentWorkspaceRequest,
      O: GetCurrentWorkspaceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc gazel.api.v1.GazelService.ScanWorkspaces
     */
    scanWorkspaces: {
      name: "ScanWorkspaces",
      I: ScanWorkspacesRequest,
      O: ScanWorkspacesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc gazel.api.v1.GazelService.SwitchWorkspace
     */
    switchWorkspace: {
      name: "SwitchWorkspace",
      I: SwitchWorkspaceRequest,
      O: SwitchWorkspaceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Target operations
     *
     * @generated from rpc gazel.api.v1.GazelService.ListTargets
     */
    listTargets: {
      name: "ListTargets",
      I: ListTargetsRequest,
      O: ListTargetsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc gazel.api.v1.GazelService.GetTarget
     */
    getTarget: {
      name: "GetTarget",
      I: GetTargetRequest,
      O: GetTargetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc gazel.api.v1.GazelService.GetTargetDependencies
     */
    getTargetDependencies: {
      name: "GetTargetDependencies",
      I: GetTargetDependenciesRequest,
      O: GetTargetDependenciesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc gazel.api.v1.GazelService.GetTargetOutputs
     */
    getTargetOutputs: {
      name: "GetTargetOutputs",
      I: GetTargetOutputsRequest,
      O: GetTargetOutputsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc gazel.api.v1.GazelService.GetReverseDependencies
     */
    getReverseDependencies: {
      name: "GetReverseDependencies",
      I: GetReverseDependenciesRequest,
      O: GetReverseDependenciesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc gazel.api.v1.GazelService.SearchTargets
     */
    searchTargets: {
      name: "SearchTargets",
      I: SearchTargetsRequest,
      O: SearchTargetsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Query operations
     *
     * @generated from rpc gazel.api.v1.GazelService.ExecuteQuery
     */
    executeQuery: {
      name: "ExecuteQuery",
      I: ExecuteQueryRequest,
      O: ExecuteQueryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc gazel.api.v1.GazelService.StreamQuery
     */
    streamQuery: {
      name: "StreamQuery",
      I: StreamQueryRequest,
      O: StreamQueryResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Build operations
     *
     * @generated from rpc gazel.api.v1.GazelService.BuildTarget
     */
    buildTarget: {
      name: "BuildTarget",
      I: BuildTargetRequest,
      O: BuildTargetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc gazel.api.v1.GazelService.StreamBuild
     */
    streamBuild: {
      name: "StreamBuild",
      I: StreamBuildRequest,
      O: StreamBuildResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Module operations
     *
     * @generated from rpc gazel.api.v1.GazelService.GetModuleGraph
     */
    getModuleGraph: {
      name: "GetModuleGraph",
      I: GetModuleGraphRequest,
      O: GetModuleGraphResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

